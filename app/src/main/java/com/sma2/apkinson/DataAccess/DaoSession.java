package com.sma2.apkinson.DataAccess;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.sma2.apkinson.DataAccess.FeatureDA;
import com.sma2.apkinson.DataAccess.PatientDA;
import com.sma2.apkinson.DataAccess.ScheduledExercise;
import com.sma2.apkinson.DataAccess.MedicineDA;
import com.sma2.apkinson.DataAccess.Exercise;
import com.sma2.apkinson.DataAccess.SignalDA;

import com.sma2.apkinson.DataAccess.FeatureDADao;
import com.sma2.apkinson.DataAccess.PatientDADao;
import com.sma2.apkinson.DataAccess.ScheduledExerciseDao;
import com.sma2.apkinson.DataAccess.MedicineDADao;
import com.sma2.apkinson.DataAccess.ExerciseDao;
import com.sma2.apkinson.DataAccess.SignalDADao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig featureDADaoConfig;
    private final DaoConfig patientDADaoConfig;
    private final DaoConfig scheduledExerciseDaoConfig;
    private final DaoConfig medicineDADaoConfig;
    private final DaoConfig exerciseDaoConfig;
    private final DaoConfig signalDADaoConfig;

    private final FeatureDADao featureDADao;
    private final PatientDADao patientDADao;
    private final ScheduledExerciseDao scheduledExerciseDao;
    private final MedicineDADao medicineDADao;
    private final ExerciseDao exerciseDao;
    private final SignalDADao signalDADao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        featureDADaoConfig = daoConfigMap.get(FeatureDADao.class).clone();
        featureDADaoConfig.initIdentityScope(type);

        patientDADaoConfig = daoConfigMap.get(PatientDADao.class).clone();
        patientDADaoConfig.initIdentityScope(type);

        scheduledExerciseDaoConfig = daoConfigMap.get(ScheduledExerciseDao.class).clone();
        scheduledExerciseDaoConfig.initIdentityScope(type);

        medicineDADaoConfig = daoConfigMap.get(MedicineDADao.class).clone();
        medicineDADaoConfig.initIdentityScope(type);

        exerciseDaoConfig = daoConfigMap.get(ExerciseDao.class).clone();
        exerciseDaoConfig.initIdentityScope(type);

        signalDADaoConfig = daoConfigMap.get(SignalDADao.class).clone();
        signalDADaoConfig.initIdentityScope(type);

        featureDADao = new FeatureDADao(featureDADaoConfig, this);
        patientDADao = new PatientDADao(patientDADaoConfig, this);
        scheduledExerciseDao = new ScheduledExerciseDao(scheduledExerciseDaoConfig, this);
        medicineDADao = new MedicineDADao(medicineDADaoConfig, this);
        exerciseDao = new ExerciseDao(exerciseDaoConfig, this);
        signalDADao = new SignalDADao(signalDADaoConfig, this);

        registerDao(FeatureDA.class, featureDADao);
        registerDao(PatientDA.class, patientDADao);
        registerDao(ScheduledExercise.class, scheduledExerciseDao);
        registerDao(MedicineDA.class, medicineDADao);
        registerDao(Exercise.class, exerciseDao);
        registerDao(SignalDA.class, signalDADao);
    }
    
    public void clear() {
        featureDADaoConfig.clearIdentityScope();
        patientDADaoConfig.clearIdentityScope();
        scheduledExerciseDaoConfig.clearIdentityScope();
        medicineDADaoConfig.clearIdentityScope();
        exerciseDaoConfig.clearIdentityScope();
        signalDADaoConfig.clearIdentityScope();
    }

    public FeatureDADao getFeatureDADao() {
        return featureDADao;
    }

    public PatientDADao getPatientDADao() {
        return patientDADao;
    }

    public ScheduledExerciseDao getScheduledExerciseDao() {
        return scheduledExerciseDao;
    }

    public MedicineDADao getMedicineDADao() {
        return medicineDADao;
    }

    public ExerciseDao getExerciseDao() {
        return exerciseDao;
    }

    public SignalDADao getSignalDADao() {
        return signalDADao;
    }

}
